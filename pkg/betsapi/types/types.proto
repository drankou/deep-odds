syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
option go_package = "github.com/drankou/deep-odds/pkg/betsapi/types";

service Betsapi {
    rpc GetInPlayEvents (InPlayEventsRequest) returns (EventsResponse) {
    }

    rpc GetUpcomingEvents (UpcomingEventsRequest) returns (EventsResponse) {
    }

    rpc GetStartingEvents (StartingEventsRequest) returns (EventsResponse) {
    }

    rpc GetEndedEvents (EndedEventsRequest) returns (EventsResponse) {
    }

    rpc GetEventView (EventViewRequest) returns (EventView) {
    }

    rpc GetEventHistory (EventHistoryRequest) returns (EventHistory) {
    }

    rpc GetEventOdds (EventOddsRequest) returns (EventOdds) {
    }

    rpc GetEventStatsTrend (EventStatsTrendRequest) returns (EventStatsTrend) {
    }

    rpc GetLeagues (LeaguesRequest) returns (LeaguesResponse) {
    }

    rpc GetTeams (TeamsRequest) returns (TeamsResponse) {
    }
}

message InPlayEventsRequest {
    //sport id
    string sport_id = 1; //required

    //league id
    string league_id = 2; //optional
}

message EventsResponse {
    repeated EventView events = 1;
    int32 next_page = 2;
}

message UpcomingEventsRequest {
    //sport id
    string sport_id = 1; //required

    //league id
    string league_id = 2; //optional

    //team id
    string team_id = 3; //optional

    //country code
    string country_code = 4; //optional

    //day in format YYYYMMDD
    string day = 5; //optional

    //page number (max 100)
    string page = 6; //optional
}

message StartingEventsRequest {
    string sport_id = 1;
    int64 minute_threshold = 2;
}

message EndedEventsRequest {
    //sport id
    string sport_id = 1; //required

    //league id
    string league_id = 2; //optional

    //team id
    string team_id = 3; //optional

    //country code
    string country_code = 4; //optional

    //day in format YYYYMMDD
    string day = 5; //optional

    //page number (max 100)
    string page = 6; //optional
}

message EventViewRequest {
    //event id
    string event_id = 1; //required
}

message EventOddsRequest {
    //event id
    string event_id = 1; //required

    //odds source, name of available bookmakers
    string source = 2; //optional

    //add_time will be >= $since_time in results. Faster to get only updates
    int64 since_time = 3; //optional

    //if you only need one (or few) market to save time/bandwidth, pass the related string like &odds_market=1 or &odds_market=2,3 etc.
    string odds_market = 4; //optional
}

message EventStatsTrendRequest {
    string event_id = 1;
}

message LeaguesRequest {
    string sport_id = 1;
    string country_code = 2;
    string page = 3;
}

message LeaguesResponse {
    repeated League leagues = 1;
    int32 next_page = 2;
}

message TeamsRequest {
    string sport_id = 1;
    string page = 2;
}

message TeamsResponse {
    repeated Team teams = 1;
    int32 next_page = 2;
}

// ------------- Event ---------------- //
message EventView {
    string id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "bson:\"id,omitempty\""];
    int64 time = 2 [(gogoproto.jsontag) = "time,string", (gogoproto.moretags) = "bson:\"time,omitempty\""];
    string sport_id = 3 [(gogoproto.jsontag) = "sport_id", (gogoproto.moretags) = "bson:\"sport_id,omitempty\""];
    string time_status = 4 [(gogoproto.jsontag) = "time_status", (gogoproto.moretags) = "bson:\"time_status,omitempty\""];
    string score = 5 [(gogoproto.jsontag) = "ss", (gogoproto.moretags) = "bson:\"score,omitempty\""];
    Team home_team = 6 [(gogoproto.jsontag) = "home", (gogoproto.moretags) = "bson:\"home_team,omitempty\""];
    Team away_team = 7 [(gogoproto.jsontag) = "away", (gogoproto.moretags) = "bson:\"away_team,omitempty\""];
    League league = 8 [(gogoproto.jsontag) = "league", (gogoproto.moretags) = "bson:\"league,omitempty\""];
    Timer timer = 9 [(gogoproto.jsontag) = "timer", (gogoproto.moretags) = "bson:\"-\""];
    ExtraInfo extra_info = 10 [(gogoproto.jsontag) = "extra,omitempty", (gogoproto.moretags) = "bson:\"extra_info,omitempty\""];
    repeated EventViewEvent events = 11 [(gogoproto.jsontag) = "events,omitempty", (gogoproto.moretags) = "bson:\"events,omitempty\""];
    int32 has_lineup = 12 [(gogoproto.jsontag) = "has_lineup,omitempty", (gogoproto.moretags) = "bson:\"has_lineup,omitempty\""];
    FootballStats stats = 13 [(gogoproto.jsontag) = "stats,omitempty", (gogoproto.moretags) = "bson:\"stats,omitempty\""];
}

message FootballStats {
    repeated string attacks = 1 [(gogoproto.jsontag) = "attacks,omitempty", (gogoproto.moretags) = "bson:\"attacks,omitempty\""];
    repeated string dangerous_attacks = 2 [(gogoproto.jsontag) = "dangerous_attacks,omitempty", (gogoproto.moretags) = "bson:\"dangerous_attacks,omitempty\""];
    repeated string possession = 3 [(gogoproto.jsontag) = "possession,omitempty", (gogoproto.moretags) = "bson:\"possession,omitempty\""];
    repeated string off_target = 4 [(gogoproto.jsontag) = "off_target,omitempty", (gogoproto.moretags) = "bson:\"off_target,omitempty\""];
    repeated string on_target = 5 [(gogoproto.jsontag) = "on_target,omitempty", (gogoproto.moretags) = "bson:\"on_target,omitempty\""];
    repeated string corners = 6 [(gogoproto.jsontag) = "corners,omitempty", (gogoproto.moretags) = "bson:\"corners,omitempty\""];
    repeated string goals = 7 [(gogoproto.jsontag) = "goals,omitempty", (gogoproto.moretags) = "bson:\"goals,omitempty\""];
    repeated string yellow_cards = 8 [(gogoproto.jsontag) = "yellowcards,omitempty", (gogoproto.moretags) = "bson:\"yellow_cards,omitempty\""];
    repeated string red_cards = 9 [(gogoproto.jsontag) = "redcards,omitempty", (gogoproto.moretags) = "bson:\"red_cards,omitempty\""];
    repeated string substitutions = 10 [(gogoproto.jsontag) = "substitutions,omitempty", (gogoproto.moretags) = "bson:\"substitutions,omitempty\""];
}
message Team {
    string id = 1 [(gogoproto.jsontag) = "id,omitempty", (gogoproto.moretags) = "bson:\"id,omitempty\""];
    string name = 2 [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = "bson:\"name,omitempty\""];
    string country_code = 3 [(gogoproto.jsontag) = "cc,omitempty", (gogoproto.moretags) = "bson:\"country_code,omitempty\""];
}

message League {
    string id = 1 [(gogoproto.jsontag) = "id,omitempty", (gogoproto.moretags) = "bson:\"id,omitempty\""];
    string name = 2 [(gogoproto.jsontag) = "name,omitempty", (gogoproto.moretags) = "bson:\"name,omitempty\""];
    string country_code = 3 [(gogoproto.jsontag) = "cc,omitempty", (gogoproto.moretags) = "bson:\"country_code,omitempty\""];
    int32 has_league_table = 4 [(gogoproto.jsontag) = "has_league_table,omitempty", (gogoproto.moretags) = "bson:\"has_league_table,omitempty\""];
    int32 has_league_top_list = 5 [(gogoproto.jsontag) = "has_league_top_list,omitempty", (gogoproto.moretags) = "bson:\"has_league_top_list,omitempty\""];
}

message Timer {
    int64 active = 1 [(gogoproto.jsontag) = "tt,string", (gogoproto.moretags) = "bson:\"-\""];
    int64 minutes = 2 [(gogoproto.jsontag) = "tm,omitempty", (gogoproto.moretags) = "bson:\"minutes,omitempty\""];
    int64 seconds = 3 [(gogoproto.jsontag) = "ts,omitempty", (gogoproto.moretags) = "bson:\"seconds,omitempty\""];
    int64 added_time = 4 [(gogoproto.jsontag) = "ta,omitempty", (gogoproto.moretags) = "bson:\"added_time,omitempty\""];
}

message ExtraInfo {
    Manager home_manager = 1 [(gogoproto.jsontag) = "home_manager,omitempty", (gogoproto.moretags) = "bson:\"home_manager,omitempty\""];
    Manager away_manager = 2 [(gogoproto.jsontag) = "away_manager,omitempty", (gogoproto.moretags) = "bson:\"away_manager,omitempty\""];
    Referee referee = 3 [(gogoproto.jsontag) = "referee,omitempty", (gogoproto.moretags) = "bson:\"referee,omitempty\""];
    StadiumData stadium_data = 4 [(gogoproto.jsontag) = "stadium_data,omitempty", (gogoproto.moretags) = "bson:\"stadium_data,omitempty\""];
    int64 length = 5 [(gogoproto.jsontag) = "length,string,omitempty", (gogoproto.moretags) = "bson:\"length,omitempty\""];
    string pitch = 6 [(gogoproto.jsontag) = "pitch,omitempty", (gogoproto.moretags) = "bson:\"pitch,omitempty\""];
    string weather = 7 [(gogoproto.jsontag) = "weather,omitempty", (gogoproto.moretags) = "bson:\"weather,omitempty\""];
    string stadium = 8 [(gogoproto.jsontag) = "stadium,omitempty", (gogoproto.moretags) = "bson:\"stadium,omitempty\""];
    int64 home_position = 9 [(gogoproto.jsontag) = "home_pos,string,omitempty", (gogoproto.moretags) = "bson:\"home_pos,omitempty\""];
    int64 away_position = 10 [(gogoproto.jsontag) = "away_pos,string,omitempty", (gogoproto.moretags) = "bson:\"away_pos,omitempty\""];
    string round = 11 [(gogoproto.jsontag) = "round,omitempty", (gogoproto.moretags) = "bson:\"round,omitempty\""];
}

message Manager {
    string name = 1 [(gogoproto.jsontag) = "name", (gogoproto.moretags) = "bson:\"name,omitempty\""];
    string country_code = 2 [(gogoproto.jsontag) = "cc", (gogoproto.moretags) = "bson:\"country_code,omitempty\""];
}

message Referee {
    string name = 1 [(gogoproto.jsontag) = "name", (gogoproto.moretags) = "bson:\"name,omitempty\""];
    string country_code = 2 [(gogoproto.jsontag) = "cc", (gogoproto.moretags) = "bson:\"country_code,omitempty\""];
}

message StadiumData {
    string id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "bson:\"id,omitempty\""];
    string name = 2 [(gogoproto.jsontag) = "name", (gogoproto.moretags) = "bson:\"name,omitempty\""];
    string city = 3 [(gogoproto.jsontag) = "city", (gogoproto.moretags) = "bson:\"city,omitempty\""];
    string country = 4 [(gogoproto.jsontag) = "country", (gogoproto.moretags) = "bson:\"country,omitempty\""];
    int64 capacity = 5 [(gogoproto.jsontag) = "capacity,string,omitempty", (gogoproto.moretags) = "bson:\"capacity,omitempty\""];
    string google_coords = 6 [(gogoproto.jsontag) = "googlecoords,omitempty", (gogoproto.moretags) = "bson:\"googlecoords,omitempty\""];
}

message EventViewEvent {
    string id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "bson:\"-\""];
    string text = 2 [(gogoproto.jsontag) = "text", (gogoproto.moretags) = "bson:\"text,omitempty\""];
}
// ----------------------------

message EventHistoryRequest {
    // event id
    string event_id = 1; //required

    // number of last matches (default 10, allowing 1 to 20)
    string qty = 2; //optional
}

message EventHistory {
    repeated EventView h2h = 1 [(gogoproto.jsontag) = "h2h", (gogoproto.moretags) = "bson:\"h2h\""];
    repeated EventView home = 2 [(gogoproto.jsontag) = "home", (gogoproto.moretags) = "bson:\"home\""];
    repeated EventView away = 3 [(gogoproto.jsontag) = "away", (gogoproto.moretags) = "bson:\"away\""];
}

// ----------- Odds ------------- //
message EventOdds {
    repeated Result full_time = 1 [(gogoproto.jsontag) = "1_1", (gogoproto.moretags) = "bson:\"full_time,omitempty\""];
    repeated AsianHandicapResult asian_handicap = 2 [(gogoproto.jsontag) = "1_2", (gogoproto.moretags) = "bson:\"asian_handicap,omitempty\""];
    repeated AsianHandicapTotal total = 3 [(gogoproto.jsontag) = "1_3", (gogoproto.moretags) = "bson:\"total,omitempty\""];
    repeated AsianHandicapTotal asian_corners = 4 [(gogoproto.jsontag) = "1_4", (gogoproto.moretags) = "bson:\"asian_corners,omitempty\""];
    repeated AsianHandicapResult first_half_asian_handicap = 5 [(gogoproto.jsontag) = "1_5", (gogoproto.moretags) = "bson:\"first_half_asian_handicap,omitempty\""];
    repeated AsianHandicapTotal first_half_total = 6 [(gogoproto.jsontag) = "1_6", (gogoproto.moretags) = "bson:\"first_half_total,omitempty\""];
    repeated AsianHandicapTotal first_half_asian_corners = 7 [(gogoproto.jsontag) = "1_7", (gogoproto.moretags) = "bson:\"first_half_asian_corners,omitempty\""];
    repeated Result first_half = 8 [(gogoproto.jsontag) = "1_8", (gogoproto.moretags) = "bson:\"first_half,omitempty\""];
}

message Result {
    string id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "bson:\"-\""];
    double home_odds = 2 [(gogoproto.jsontag) = "home_od,string", (gogoproto.moretags) = "bson:\"home_odds\""];
    double draw_odds = 3 [(gogoproto.jsontag) = "draw_od,string", (gogoproto.moretags) = "bson:\"draw_odds\""];
    double away_odds = 4 [(gogoproto.jsontag) = "away_od,string", (gogoproto.moretags) = "bson:\"away_odds\""];
    string score = 5 [(gogoproto.jsontag) = "ss", (gogoproto.moretags) = "bson:\"score\""];
    int64 minute = 6 [(gogoproto.jsontag) = "time_str,string", (gogoproto.moretags) = "bson:\"minute\""];
    int64 add_time = 7 [(gogoproto.jsontag) = "add_time,string", (gogoproto.moretags) = "bson:\"add_time,omitempty\""];
}

message AsianHandicapResult {
    string id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "bson:\"-\""];
    double home_odds = 2 [(gogoproto.jsontag) = "home_od,string", (gogoproto.moretags) = "bson:\"home_odds\""];
    string handicap = 3 [(gogoproto.jsontag) = "handicap", (gogoproto.moretags) = "bson:\"handicap\""];
    double away_odds = 4 [(gogoproto.jsontag) = "away_od,string", (gogoproto.moretags) = "bson:\"away_odds\""];
    string score = 5 [(gogoproto.jsontag) = "ss", (gogoproto.moretags) = "bson:\"score\""];
    int64 minute = 6 [(gogoproto.jsontag) = "time_str,string", (gogoproto.moretags) = "bson:\"minute\""];
    int64 add_time = 7 [(gogoproto.jsontag) = "add_time,string", (gogoproto.moretags) = "bson:\"add_time,omitempty\""];
}

message AsianHandicapTotal {
    string id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "bson:\"-\""];
    double over_odds = 2 [(gogoproto.jsontag) = "over_od,string", (gogoproto.moretags) = "bson:\"home_odds\""];
    string handicap = 3 [(gogoproto.jsontag) = "handicap", (gogoproto.moretags) = "bson:\"handicap\""];
    double under_odds = 4 [(gogoproto.jsontag) = "under_od,string", (gogoproto.moretags) = "bson:\"away_odds\""];
    string score = 5 [(gogoproto.jsontag) = "ss", (gogoproto.moretags) = "bson:\"score\""];
    int64 minute = 6 [(gogoproto.jsontag) = "time_str,string", (gogoproto.moretags) = "bson:\"minute\""];
    int64 add_time = 7 [(gogoproto.jsontag) = "add_time,string", (gogoproto.moretags) = "bson:\"add_time,omitempty\""];
}
// ----------------------------

// ------------------ Stats trend ----------------- //
message EventStatsTrend {
    StatsTrendValue attacks = 1 [(gogoproto.jsontag) = "attacks", (gogoproto.moretags) = "bson:\"attacks,omitempty\""];
    StatsTrendValue dangerous_attacks = 2 [(gogoproto.jsontag) = "dangerous_attacks", (gogoproto.moretags) = "bson:\"dangerous_attacks,omitempty\""];
    StatsTrendValue possession = 3 [(gogoproto.jsontag) = "possession", (gogoproto.moretags) = "bson:\"possession,omitempty\""];
    StatsTrendValue off_target = 4 [(gogoproto.jsontag) = "off_target", (gogoproto.moretags) = "bson:\"off_target,omitempty\""];
    StatsTrendValue on_target = 5 [(gogoproto.jsontag) = "on_target", (gogoproto.moretags) = "bson:\"on_target,omitempty\""];
    StatsTrendValue corners = 6 [(gogoproto.jsontag) = "corners", (gogoproto.moretags) = "bson:\"corners,omitempty\""];
    StatsTrendValue goals = 7 [(gogoproto.jsontag) = "goals", (gogoproto.moretags) = "bson:\"goals,omitempty\""];
    StatsTrendValue yellow_cards = 8 [(gogoproto.jsontag) = "yellowcards", (gogoproto.moretags) = "bson:\"yellow_cards,omitempty\""];
    StatsTrendValue red_cards = 9 [(gogoproto.jsontag) = "redcards", (gogoproto.moretags) = "bson:\"red_cards,omitempty\""];
    StatsTrendValue substitutions = 10 [(gogoproto.jsontag) = "substitutions", (gogoproto.moretags) = "bson:\"substitutions,omitempty\""];
}

message StatsTrendValue {
    repeated StatsTrendTick home = 1 [(gogoproto.jsontag) = "home", (gogoproto.moretags) = "bson:\"home\""];
    repeated StatsTrendTick away = 2 [(gogoproto.jsontag) = "away", (gogoproto.moretags) = "bson:\"away\""];
}

message StatsTrendTick {
    int64 time = 1 [(gogoproto.jsontag) = "time_str,string", (gogoproto.moretags) = "bson:\"time\""];
    int64 value = 2 [(gogoproto.jsontag) = "val,string", (gogoproto.moretags) = "bson:\"value\""];
}

message FootballEvent {
    EventView event = 1 [(gogoproto.jsontag) = "event", (gogoproto.moretags) = "bson:\"event\""];
    EventHistory history = 2 [(gogoproto.jsontag) = "history", (gogoproto.moretags) = "bson:\"history\""];
    EventOdds odds = 3 [(gogoproto.jsontag) = "odds", (gogoproto.moretags) = "bson:\"odds\""];
    EventStatsTrend stats_trend = 4 [(gogoproto.jsontag) = "stats_trend", (gogoproto.moretags) = "bson:\"stats_trend\""];
}
